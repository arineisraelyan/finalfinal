---
title: "Sentiment analysis of narratives"
execute:
    echo: false
    message: false
---

```{r}
#| message: false
library(tidytext)
library(dplyr)
library(stringr)
library(readr)
library(tidyr)
```

```{r}
#| message: false
dir1t <-  "~/Desktop/finalfinal/data/anna-karenina.txt"
dir2t <- "~/Desktop/finalfinal/data/tom-sawyer.txt"
dir3t <- "~/Desktop/finalfinal/data/war-peace.txt"
dir4t <-  "~/Desktop/finalfinal/data/captain-daughter.txt"
dir5t <- "~/Desktop/finalfinal/data/little-women.txt"
dir6t <- "~/Desktop/finalfinal/data/murder.txt"
dir7t <- "~/Desktop/finalfinal/data/oliver-twist.txt"
dir8t <- "~/Desktop/finalfinal/data/white-fang.txt"
dir9t <- "~/Desktop/finalfinal/data/robin.txt"

library(tibble)

narratives <- tibble(
  narrative = c(
    "Anna Karenina",
    "Little Women",
    "Murder on the Orient Express",
    "Oliver Twist",
    "Robinson Crusoe",
    "The Captain's Daughter",
    "The Adventures of Tom Sawyer",
    "War and Peace",
    "White Fang"
  ),
  author = c(
    "Leo Tolstoy",
    "Louisa May Alcott",
    "Agatha Christie",
    "Charles Dickens",
    "Daniel Defoe",
    "Alexander Pushkin",
    "Mark Twain",
    "Leo Tolstoy",
    "Jack London"
  ),
  country = c(
    "Russia",
    "United States",
    "England",
    "England",
    "England",
    "Russia",
    "United States",
    "Russia",
    "United States"
  ),
  birth_year = c(
    1828,
    1832,
    1890,
    1812,
    1660,  # approximate
    1799,
    1835,
    1828,
    1876
  ),
  death_year = c(
    1910,
    1888,
    1976,
    1870,
    1731,
    1837,
    1910,
    1910,
    1916
  ),
  century = c(
    19,
    19,
    20,
    19,
    17, 
    19,
    19,
    19,
    19
  )
)
```

```{r}
#| message: false
# afinn <- get_sentiments("afinn")
# 
# positive <- get_sentiments("afinn") |> filter(value>0)
# 
# negative <- get_sentiments("afinn") |> filter(value<0)
# 
# lines1 <- read_lines(dir1t) 
# dir1 <- tibble(text=lines1)
# lines2 <- read_lines(dir2t) 
# dir2 <- tibble(text=lines2)
# lines3 <- read_lines(dir3t)
# dir3 <- tibble(text=lines3)
```

```{r}
#| message: false
# tidy_book1 <- dir2 %>% mutate(
#     linenumber = row_number(),
#     chapter = cumsum(str_detect(text, regex("^chapter [ivxlc]+", ignore_case = TRUE)))) %>%
#       unnest_tokens(word, text) %>% filter(chapter>0)
```

```{r}
#| message: false
# sentiments1_pos <- tidy_book1 %>%
#   inner_join(positive) %>%
#   count(word, sort = TRUE)
# 
# sentiments1_neg <-tidy_book1 %>%
#   inner_join(negative) %>%
#   count(word, sort = TRUE)
# 
# 
# word_scores <- tidy_book1 %>%
#   count(word, sort = TRUE)
# word_sentiments <- get_sentiments("afinn")
# word_sentiment_data <- word_scores %>% left_join(word_sentiments, by = "word") |> mutate(word_avg_sent = n * value) %>% drop_na()
                                                    
```

```{r}
#| message: false
# library(ggplot2)
# 
# word_sentiment_data |> ggplot(aes(word, word_avg_sent)) + geom_col() + scale_x_discrete(labels = NULL) 
```

```{r}
#| message: false
library(readr)
library(dplyr)
library(tidyverse)

anna_karenina <- read_rds("data/anna_karenina_summary.rds")

captain_daughter <- read_rds("data/captain_daughter_summary.rds")

little_women <- read_rds("data/little_women_summary.rds")

murder <- read_rds("data/murder_summary.rds")

oliver_twist <- read_rds("data/oliver_twist_summary.rds")

robin <- read_rds("data/robin_summary.rds")

tom_sawyer <- read_rds("data/tom_sawyer_summary.rds")

war_peace <- read_rds("data/war_peace_summary.rds")

white_fang <- read_rds("data/white_fang_summary.rds")

all_books_summary <- bind_rows(anna_karenina, captain_daughter, little_women, murder, oliver_twist, robin, tom_sawyer, war_peace, white_fang)
```

```{r}
#| warning: false
#| message: false
empty_bar <- 4
to_add <- data.frame(matrix(NA, empty_bar * nlevels(factor(all_books_summary$country)), ncol(all_books_summary)))
colnames(to_add) <- colnames(all_books_summary)
to_add$country <- rep(levels(factor(all_books_summary$country)), each = empty_bar)

data <- rbind(all_books_summary, to_add)
data <- data %>% arrange(country)
data$id <- seq(1, nrow(data))

label_data <- data
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id - 0.5) / number_of_bar
label_data$hjust <- ifelse(angle < -90, 1, 0)
label_data$angle <- ifelse(angle < -90, angle + 180, angle)

plot2 <- ggplot(data, aes(x = as.factor(id), y = median_sentiment, fill = country)) +
  geom_bar(stat = "identity", alpha = 0.5) +
  ylim(-1.5, 2) +  
  theme_minimal() +
  theme(
    legend.position = "none",
    axis.text = element_blank(),
    axis.title = element_blank(),
    panel.grid = element_blank(),
    plot.margin = unit(rep(-1, 4), "cm")
  ) +
  coord_polar() +
  geom_text(data = label_data, aes(x = id, y = median_sentiment + 0.1, label = book, hjust = hjust),
            color = "black", fontface = "bold", alpha = 0.6, size = 2.5, angle = label_data$angle, inherit.aes = FALSE)

```

```{r}
#| message: false
all_books_summary_clean <- all_books_summary %>%
  select(-author, -country)


all_books_summary_with_narratives <- all_books_summary_clean %>%
  left_join(narratives, by = c("book" = "narrative"))

author_sentiment <- all_books_summary_with_narratives %>%
  group_by(author) %>%
  summarise(median_sentiment = median(median_sentiment, na.rm = TRUE)) %>%
  ungroup()

plot3 <- ggplot(author_sentiment, aes(x = author, y = median_sentiment, fill = author)) +
  geom_bar(stat = "identity") + 
  scale_fill_manual(values = c(
    "Leo Tolstoy" = "#8140c7",
    "Louisa May Alcott" = "#4073c7",
    "Agatha Christie" = "#c74068",
    "Charles Dickens" = "#c740a7",
    "Daniel Defoe" = "#40c791",
    "Alexander Pushkin" = "#5440c7",
    "Mark Twain" = "#b7c740",
    "Jack London" = "#c75440"
  )) +
  labs(title = "Median Sentiment by Author", x = "Author", y = "Median Sentiment Score") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 10), 
    axis.text.y = element_text(size = 12),
    plot.title = element_text(size = 14, hjust = 0.5),
    legend.position = "none"
  )
```

```{r}
library(ggplot2)
library(dplyr)

all_books_summary_with_narratives <- all_books_summary_with_narratives %>%
  arrange(author) %>%
  mutate(id = row_number())

plot4 <- ggplot(all_books_summary_with_narratives, aes(x = factor(id), y = median_sentiment, fill = author)) +
  geom_bar(stat = "identity") +
  coord_polar() +
  scale_fill_manual(values = c(
    "Leo Tolstoy" = "#8140c7",
    "Louisa May Alcott" = "#4073c7",
    "Agatha Christie" = "#c74068",
    "Charles Dickens" = "#c740a7",
    "Daniel Defoe" = "#40c791",
    "Alexander Pushkin" = "#5440c7",
    "Mark Twain" = "#b7c740",
    "Jack London" = "#c75440"
  )) +
  labs(
    title = "Literary Sentiment Galaxy",
    x = "", y = ""
  ) +
  theme_minimal() +
  theme(
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    panel.grid = element_blank(),
    legend.position = "right",
    plot.title = element_text(hjust = 0.5, size = 16)
  )
```

```{r}
  #| message: false
library(ggplot2)
library(gganimate)
library(dplyr)

country_century_sentiment <- all_books_summary_with_narratives %>%
  group_by(country, century) %>%
  summarise(median_sentiment = median(median_sentiment, na.rm = TRUE), .groups = "drop")

plot5 <- ggplot(country_century_sentiment, aes(x = country, y = median_sentiment, color = country)) +
  geom_point(size = 6, alpha = 0.8) +
  labs(title = 'Sentiment by Country in Century: {closest_state}', y = 'Median Sentiment', x = 'Country') +
  theme_minimal() +
  transition_states(century, transition_length = 2, state_length = 1) +
  ease_aes('cubic-in-out')

```

```{r}
chapter_sentiment_anna_karenina <- readRDS("data/chapter_sentiment_anna_karenina.rds")
chapter_sentiment_captain_daughter <- readRDS("data/chapter_sentiment_captain_daughter.rds")
chapter_sentiment_little_women <- readRDS("data/chapter_sentiment_little_women.rds")
chapter_sentiment_murder <- readRDS("data/chapter_sentiment_murder.rds")
chapter_sentiment_oliver_twist <- readRDS("data/chapter_sentiment_oliver_twist.rds")
chapter_sentiment_robin <- readRDS("data/chapter_sentiment_robin.rds")
chapter_sentiment_tom_sawyer <- readRDS("data/chapter_sentiment_tom_sawyer.rds")
chapter_sentiment_war_peace <- readRDS("data/chapter_sentiment_war_peace.rds")
chapter_sentiment_white_fang <- readRDS("data/chapter_sentiment_white_fang.rds")

all_chapter_sentiments <- bind_rows(
  chapter_sentiment_anna_karenina,
  chapter_sentiment_captain_daughter,
  chapter_sentiment_little_women,
  chapter_sentiment_murder,
  chapter_sentiment_oliver_twist,
  chapter_sentiment_robin,
  chapter_sentiment_tom_sawyer,
  chapter_sentiment_war_peace,
  chapter_sentiment_white_fang
)
```

```{r}
#| message: false
#| warning: false
library(ggplot2)

plot1 <- ggplot(all_chapter_sentiments, aes(x = chapter, y = median_sentiment, color = book)) +
  geom_line() +
  geom_point(size = 1.5) +
  labs(
    title = "Chapter-Level Sentiment Across All Books",
    x = "Chapter",
    y = "Median Sentiment",
    color = "Book"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16),
    legend.position = "bottom"
  )

```

# What is Sentimental Analysis of Narratives?

Sentimental analysis of narratives is a the process of analysing and presenting the plots and mood of narratives of authors from different countries, centuries, races. Sentimental score is a number representing the level of the word's sentiment. If the score is negative, the sentiment of the word is negative, if the score if positive, the sentiment score of the word is positive. If the score is zero, the word is neutral.

**Narratives included**

There were included authors from only 3 countries: **USA**, **UK** and **Russia**. You can see all the books on the top or on the right side of the website.

# Why is this project important?

Before finding a book to read, you often think if it will match your taste and your mood at the time. This project can be useful to warn you about the sentimental aura of the book.

# Plot number 1: Chapter-level sentimental score across each book

This plot presents the sentimental score of each chapter in each book. It is easier to understand the emotional plot of the book according to this plot.

```{r}
#| message: false
#| warning: false

library(plotly)
ggplotly(plot1)
```

The narrative with the most amount of plot twists is **The Adventures of Tom Sawyer**, according to the abrupt changes in the plot's sentimental value across the chapters.

# Plot number 2: Median sentimental score of each book grouped by the countries

Blue: USA, Green: UK, red: Russia.

```{r}
#| message: false
#| warning: false
plot2
```

**Little Women** has the highest median sentimental score. It also means that the sentimental score of the plot of the narrative stays mostly at the same level, because the sentimental score doesn't have sharp twists.

# Plot number 3: Median sentimental score of each authors (only 1-2 narratives included)

```{r}
#| message: false
#| warning: false
plot3
```

```{r}
#| message: false
#| warning: false
# plot4
```

**Louisa May Alcott** is the author with the highest median sentimental score.

# Plot number 4: Median sentimental score across the centuries in the countries

```{r}
#| message: false
#| warning: false
animate(plot5, nframes = 100, fps = 10)
```

**UK** is the country with the most sentimental difference during the centuries.

# Conclusion

The narrative with the most amount of plot twists is **The Adventures of Tom Sawyer**, according to the abrupt changes in the plot's sentimental value across the chapters.

**Little Women** has the highest median sentimental score. It also means that the sentimental score of the plot of the narrative stays mostly at the same level, because the sentimental score doesn't have sharp twists.

**Louisa May Alcott** is the author with the highest median sentimental score.

**UK** is the country with the most sentimental difference during the centuries.
