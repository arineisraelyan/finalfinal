---
title: "The Adventures of Tom Sawyer"
execute:
    echo: false
    message: false
---

```{r}
#| message: false
library(tidytext)
library(dplyr)
library(stringr)
library(readr)
library(tidyr)
```
```{r}
dirt_tom_sawyer <-  "~/Desktop/finalfinal/data/tom-sawyer.txt"
```

```{r}
#| message: false
afinn <- get_sentiments("afinn")

positive <- get_sentiments("afinn") |> filter(value > 0)

negative <- get_sentiments("afinn") |> filter(value < 0)

lines_tom_sawyer <- read_lines(dirt_tom_sawyer) 
dir_tom_sawyer <- tibble(text = lines_tom_sawyer)
```

```{r}
#| message: false
tidy_book_tom_sawyer <- dir_tom_sawyer %>%
  mutate(
    linenumber = row_number(),
    chapter = cumsum(str_detect(text, regex("^chapter [ivxlc]+", ignore_case = TRUE)))
  ) %>%
  unnest_tokens(word, text) %>%
  filter(chapter > 0) %>%
  left_join(get_sentiments("afinn"), by = "word")
```

```{r}
#| message: false
sentiments_pos_tom_sawyer <- tidy_book_tom_sawyer %>%
  inner_join(positive) %>%
  count(word, sort = TRUE)

sentiments_neg_tom_sawyer <- tidy_book_tom_sawyer %>%
  inner_join(negative) %>%
  count(word, sort = TRUE)

word_scores_tom_sawyer <- tidy_book_tom_sawyer %>%
  count(word, sort = TRUE)

word_sentiment_data_tom_sawyer <- word_scores_tom_sawyer %>%
  left_join(get_sentiments("afinn"), by = "word") %>%
  mutate(word_avg_sent = n * value) %>%
  drop_na()
```

# Plot 1: Average sentimental score for each non-neutral word in the narrative

**You can see that there are words with both negative and positive sentimental score.**

```{r}
#| message: false
library(ggplot2)

word_sentiment_data_tom_sawyer |> 
  ggplot(aes(word, word_avg_sent, color="blue")) + 
  geom_col() + 
  scale_x_discrete(labels = NULL) + 
  labs(title = "Average Sentiment Score per Word – The Adventures ofTom Sawyer",
       x = "Words",
       y = "Average Sentiment Score") + 
  theme_minimal() + 
  theme(legend.position = "none")
```

```{r}
#| message: false
chapter_info_tom_sawyer <- tidy_book_tom_sawyer %>%
  select(chapter, linenumber, word) %>% 
  distinct()

chapter_sentiment_tom_sawyer <- tidy_book_tom_sawyer %>%
  group_by(chapter) %>%
  summarise(median_sentiment = median(value, na.rm = TRUE))

tidy_book_sentiment_tom_sawyer <- tidy_book_tom_sawyer %>%
  select(-value) %>%  
  left_join(get_sentiments("afinn"), by = "word") %>%
  drop_na(value)

chapter_sentiment_tom_sawyer <- tidy_book_sentiment_tom_sawyer %>%
  group_by(chapter) %>%
    summarise(median_sentiment = median(value, na.rm = TRUE))
```

# Plot 2: Average sentimental score of each chapter

```{r}
#| message: false
library(plotly)

p <- chapter_sentiment_tom_sawyer %>%
  ggplot(aes(x = chapter, y = median_sentiment)) +
  geom_point(color = "blue", size = 3) +
  geom_line(color = "blue") +
  labs(title = "Median Sentiment by Chapter – The Adventures of Tom Sawyer",
       x = "Chapter",
       y = "Median Sentiment (AFINN)") + 
  theme_minimal() +
  theme(legend.position = "none")

ggplotly(p)
```

# Plot 3: Most used words by their sentimental value

```{r}
#| message: false
library(dplyr)
library(tidytext)
library(reshape2)
library(wordcloud)

tidy_book_tom_sawyer %>%
  inner_join(get_sentiments("bing"), by = "word") %>%
  count(word, sentiment, sort = TRUE) %>%
  acast(word ~ sentiment, value.var = "n", fill = 0) %>%
  comparison.cloud(colors = c("#bd3e2f", "#769e6d"), max.words = 250)
```

```{r}
tom_sawyer_summary <- tibble(
  book = "The Adventures of Tom Sawyer",
  author = "Mark Twain",
  country = "United States",
  median_sentiment = median(chapter_sentiment_tom_sawyer$median_sentiment, na.rm = TRUE)
)

write_rds(tom_sawyer_summary, "data/tom_sawyer_summary.rds")
```

```{r}
chapter_sentiment_tom_sawyer <- chapter_sentiment_tom_sawyer %>%
  mutate(book = "The Adventures of Tom Sawyer")

saveRDS(chapter_sentiment_tom_sawyer, "data/chapter_sentiment_tom_sawyer.rds")

```

**Conclusion:**
This narrative is rich with different kinds of words and prosperous in its plot.
